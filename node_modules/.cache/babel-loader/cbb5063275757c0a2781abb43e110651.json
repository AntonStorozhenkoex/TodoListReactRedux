{"ast":null,"code":"var _jsxFileName = \"/home/user/work/TodoListReact/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./components/todoList/Header\";\nimport TodoList from \"./components/todoList/TodoList\";\nimport { useEffect, useState } from \"react\";\nimport { link } from \"./localhost\";\nimport { fetchData } from \"../services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const [todos, setTodos] = useState([]);\n\n  function AddNewTodoAPI(inputValue) {\n    return fetch(link, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        value: inputValue\n      })\n    }).then(fetchData);\n  }\n\n  function listItemChangeAPI(elem) {\n    return fetch(`${link}/toggle/${elem.id}`, {\n      method: \"PUT\"\n    }).then(fetchData);\n  }\n\n  function deleteItemAPI(todo) {\n    return fetch(`${link}${todo.id}`, {\n      method: \"DELETE\"\n    }).then(fetchData);\n  }\n\n  function deleteAllItemsAPI() {\n    return fetch(link, {\n      method: \"DELETE\"\n    }).then(fetchData);\n  }\n\n  const [filter, setFilter] = useState(\"all\");\n\n  const getTodosByFilter = () => {\n    if (filter === \"all\") {\n      return todos;\n    }\n\n    if (filter === \"active\") {\n      return todos.filter(elem => !elem.isDone);\n    }\n\n    if (filter === \"finish\") {\n      return todos.filter(elem => elem.isDone);\n    }\n  };\n\n  const handleAddTodo = (inputValue, setInputValue) => {\n    if (inputValue) {\n      AddNewTodoAPI(inputValue);\n      setInputValue(\"\");\n    } else {\n      alert(\"Введите корректное значение\");\n    }\n  };\n\n  const listItemChange = id => {\n    setTodos(todos.map(elem => {\n      if (elem.id === id) {\n        elem.isDone = !elem.isDone;\n        listItemChangeAPI(elem);\n      }\n\n      return elem;\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App myApp\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      deleteAllItemsAPI: deleteAllItemsAPI,\n      deleteItemAPI: deleteItemAPI,\n      handleAddTodo: handleAddTodo,\n      listItemChange: listItemChange,\n      filter: filter,\n      setFilter: setFilter,\n      getTodosByFilter: getTodosByFilter(),\n      todos: todos,\n      setTodos: setTodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"l+DfVijUxY88jQ+Xb8akVq2FEWA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/user/work/TodoListReact/my-app/src/App.js"],"names":["Header","TodoList","useEffect","useState","link","fetchData","App","todos","setTodos","AddNewTodoAPI","inputValue","fetch","method","headers","body","JSON","stringify","value","then","listItemChangeAPI","elem","id","deleteItemAPI","todo","deleteAllItemsAPI","filter","setFilter","getTodosByFilter","isDone","handleAddTodo","setInputValue","alert","listItemChange","map"],"mappings":"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","sourcesContent":["import Header from \"./components/todoList/Header\";\nimport TodoList from \"./components/todoList/TodoList\";\nimport { useEffect, useState } from \"react\";\nimport {link} from \"./localhost\";\nimport {fetchData} from \"../services\";\nfunction App() {\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const [todos, setTodos] = useState([\n  ]);\n  function AddNewTodoAPI(inputValue) {\n    return fetch(link, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ value: inputValue }),\n    }).then(fetchData);\n  }\n  function listItemChangeAPI(elem) {\n    return fetch(`${link}/toggle/${elem.id}`, {\n      method: \"PUT\",\n    }).then(fetchData);\n  }\n  function deleteItemAPI(todo) {\n    return fetch(`${link}${todo.id}`, {\n      method: \"DELETE\",\n    }).then(fetchData);\n  }\n  function deleteAllItemsAPI() {\n    return fetch(link, {\n      method: \"DELETE\",\n    }).then(fetchData);\n  }\n  const [filter, setFilter] = useState(\"all\");\n\n  const getTodosByFilter = () => {\n    if (filter === \"all\") {\n      return todos;\n    }\n\n    if (filter === \"active\") {\n      return todos.filter((elem) => !elem.isDone);\n    }\n\n    if (filter === \"finish\") {\n      return todos.filter((elem) => elem.isDone);\n    }\n  };\n  const handleAddTodo = (inputValue, setInputValue) => {\n    if (inputValue) {\n      AddNewTodoAPI(inputValue);\n      setInputValue(\"\");\n    } else {\n      alert(\"Введите корректное значение\");\n    }\n  };\n  const listItemChange = (id) => {\n    setTodos(\n      todos.map((elem) => {\n        if (elem.id === id) {\n          elem.isDone = !elem.isDone;\n          listItemChangeAPI(elem);\n        }\n        return elem;\n      })\n    );\n  };\n\n  return (\n    <div className=\"App myApp\">\n      <Header />\n      <TodoList\n        deleteAllItemsAPI={deleteAllItemsAPI}\n        deleteItemAPI={deleteItemAPI}\n        handleAddTodo={handleAddTodo}\n        listItemChange={listItemChange}\n        filter={filter}\n        setFilter={setFilter}\n        getTodosByFilter={getTodosByFilter()}\n        todos={todos}\n        setTodos={setTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}