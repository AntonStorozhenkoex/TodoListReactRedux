{"ast":null,"code":"var _jsxFileName = \"/home/user/work/TodoListReact/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./components/todoList/Header\";\nimport TodoList from \"./components/todoList/TodoList\";\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([{\n    id: uuidv4(),\n    value: \"Начать Todo\",\n    isDone: true\n  }, {\n    id: uuidv4(),\n    value: \"Закончить Todo\",\n    isDone: false\n  }]);\n\n  const fetchData = async () => {\n    const response = await fetch('http://localhost:8081/api/todos');\n    setTodos(await response.json());\n  };\n\n  document.addEventListener('DOMContentLoaded', fetchData);\n  const [filter, setFilter] = useState(\"all\");\n\n  const getTodosByFilter = () => {\n    if (filter === \"all\") {\n      return todos;\n    }\n\n    if (filter === \"active\") {\n      return todos.filter(elem => !elem.isDone);\n    }\n\n    if (filter === \"finish\") {\n      return todos.filter(elem => elem.isDone);\n    }\n  };\n\n  const handleAddTodo = (inputValue, setInputValue) => {\n    if (inputValue) {\n      let obj = {\n        id: uuidv4(),\n        value: inputValue,\n        isDone: false\n      };\n      const newTodos = todos.concat(obj);\n      setTodos(newTodos);\n      setInputValue(\"\");\n    } else {\n      alert(\"Введите корректное значение\");\n    }\n  };\n\n  const listItemChange = id => {\n    setTodos(todos.map(elem => {\n      // TODO possible variant\n      // if (elem.id === id) {\n      //   return {\n      //     ...elem,\n      //     isDone: !elem.isDone\n      //   }\n      // }\n      //\n      // return elem\n      if (elem.id === id) {\n        elem.isDone = !elem.isDone;\n      }\n\n      return elem;\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App myApp\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      handleAddTodo: handleAddTodo,\n      listItemChange: listItemChange,\n      filter: filter,\n      setFilter: setFilter,\n      getTodosByFilter: getTodosByFilter(),\n      todos: todos,\n      setTodos: setTodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"gCXo7au5Wa0EeBrVEwyjEGbc/gw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/user/work/TodoListReact/my-app/src/App.js"],"names":["Header","TodoList","useState","v4","uuidv4","App","todos","setTodos","id","value","isDone","fetchData","response","fetch","json","document","addEventListener","filter","setFilter","getTodosByFilter","elem","handleAddTodo","inputValue","setInputValue","obj","newTodos","concat","alert","listItemChange","map"],"mappings":"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","sourcesContent":["import Header from \"./components/todoList/Header\";\nimport TodoList from \"./components/todoList/TodoList\";\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nfunction App() {\n  const [todos, setTodos] = useState([\n    { id: uuidv4(), value: \"Начать Todo\", isDone: true },\n    { id: uuidv4(), value: \"Закончить Todo\", isDone: false },\n  ]);\n  const fetchData = async () => {\n    const response = await fetch('http://localhost:8081/api/todos');\n    setTodos(await response.json())\n  }\n  document.addEventListener('DOMContentLoaded',fetchData)\n  const [filter, setFilter] = useState(\"all\");\n\n  const getTodosByFilter = () => {\n    if (filter === \"all\") {\n      return todos;\n    }\n\n    if (filter === \"active\") {\n      return todos.filter((elem) => !elem.isDone);\n    }\n\n    if (filter === \"finish\") {\n      return todos.filter((elem) => elem.isDone);\n    }\n  };\n  const handleAddTodo = (inputValue, setInputValue) => {\n    if (inputValue) {\n      let obj = {\n        id: uuidv4(),\n        value: inputValue,\n        isDone: false,\n      };\n      const newTodos = todos.concat(obj);\n      setTodos(newTodos);\n      setInputValue(\"\");\n    } else {\n      alert(\"Введите корректное значение\");\n    }\n  };\n  const listItemChange = (id) => {\n    setTodos(\n      todos.map((elem) => {\n        // TODO possible variant\n        // if (elem.id === id) {\n        //   return {\n        //     ...elem,\n        //     isDone: !elem.isDone\n        //   }\n        // }\n        //\n        // return elem\n        if (elem.id === id) {\n          elem.isDone = !elem.isDone;\n        }\n\n        return elem;\n      })\n    );\n  };\n\n  return (\n    <div className=\"App myApp\">\n      <Header />\n      <TodoList\n        handleAddTodo={handleAddTodo}\n        listItemChange={listItemChange}\n        filter={filter}\n        setFilter={setFilter}\n        getTodosByFilter={getTodosByFilter()}\n        todos={todos}\n        setTodos={setTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}