{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst todo = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return {\n        id: action.id,\n        value: action.value,\n        isDone: false\n      };\n\n    case 'DELETE_TODO':\n      return {};\n\n    case 'TOGGLE_TODO':\n      if (state.id !== action.id) {\n        return state;\n      }\n\n      return { ...state,\n        isDone: !state.isDone\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst todos = (state = [{\n  id: uuidv4(),\n  value: \"Начать Todo\",\n  isDone: true\n}, {\n  id: uuidv4(),\n  value: \"Закончить Todo\",\n  isDone: false\n}], action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [...state, todo(undefined, action)];\n\n    case 'DELETE_TODO':\n      return state.filter(t => todo.id !== action.id);\n\n    case 'TOGGLE_TODO':\n      return state.map(t => todo(t, action));\n\n    default:\n      return state;\n  }\n};\n\nconst visibilityFilter = (state = 'SHOW_ALL', action) => {\n  switch (action.type) {\n    case 'SET_VISIBILITY_FILTER':\n      return action.filter;\n\n    default:\n      return state;\n  }\n};\n\nexport const todoApp = combineReducers({\n  todos,\n  visibilityFilter\n});","map":{"version":3,"sources":["/home/user/work/TodoRedux/TodoListReact/src/redux/main.js"],"names":["combineReducers","v4","uuidv4","todo","state","action","type","id","value","isDone","todos","undefined","filter","t","map","visibilityFilter","todoApp"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,OAA9B;AACA,SAAQC,EAAE,IAAIC,MAAd,QAA2B,MAA3B;;AAGA,MAAMC,IAAI,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACI,aAAO;AACHC,QAAAA,EAAE,EAAEF,MAAM,CAACE,EADR;AAEHC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAFX;AAGHC,QAAAA,MAAM,EAAE;AAHL,OAAP;;AAKJ,SAAK,aAAL;AACI,aAAO,EAAP;;AAGJ,SAAK,aAAL;AACI,UAAIL,KAAK,CAACG,EAAN,KAAaF,MAAM,CAACE,EAAxB,EAA4B;AACxB,eAAOH,KAAP;AACH;;AACD,aAAO,EACH,GAAGA,KADA;AAEHK,QAAAA,MAAM,EAAE,CAACL,KAAK,CAACK;AAFZ,OAAP;;AAIJ;AACI,aAAOL,KAAP;AApBR;AAsBH,CAvBD;;AAyBA,MAAMM,KAAK,GAAG,CAACN,KAAK,GAAG,CACnB;AAACG,EAAAA,EAAE,EAAEL,MAAM,EAAX;AAAeM,EAAAA,KAAK,EAAE,aAAtB;AAAqCC,EAAAA,MAAM,EAAE;AAA7C,CADmB,EAEnB;AAACF,EAAAA,EAAE,EAAEL,MAAM,EAAX;AAAeM,EAAAA,KAAK,EAAE,gBAAtB;AAAwCC,EAAAA,MAAM,EAAE;AAAhD,CAFmB,CAAT,EAGXJ,MAHW,KAGA;AACV,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACI,aAAO,CACH,GAAGF,KADA,EAEHD,IAAI,CAACQ,SAAD,EAAYN,MAAZ,CAFD,CAAP;;AAIJ,SAAK,aAAL;AACI,aAAOD,KAAK,CAACQ,MAAN,CAAaC,CAAC,IAAEV,IAAI,CAACI,EAAL,KAAYF,MAAM,CAACE,EAAnC,CAAP;;AACJ,SAAK,aAAL;AACI,aAAOH,KAAK,CAACU,GAAN,CAAUD,CAAC,IAAIV,IAAI,CAACU,CAAD,EAAIR,MAAJ,CAAnB,CAAP;;AACJ;AACI,aAAOD,KAAP;AAXR;AAaH,CAjBD;;AAmBA,MAAMW,gBAAgB,GAAG,CAACX,KAAK,GAAG,UAAT,EAAqBC,MAArB,KAAgC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAI,uBAAJ;AACI,aAAOD,MAAM,CAACO,MAAd;;AACJ;AACI,aAAOR,KAAP;AAJR;AAMH,CAPD;;AASA,OAAO,MAAMY,OAAO,GAAGhB,eAAe,CAAC;AAACU,EAAAA,KAAD;AAAOK,EAAAA;AAAP,CAAD,CAA/B","sourcesContent":["import {combineReducers} from \"redux\";\nimport {v4 as uuidv4} from \"uuid\";\n\n\nconst todo = (state, action) => {\n    switch (action.type) {\n        case 'ADD_TODO':\n            return {\n                id: action.id,\n                value: action.value,\n                isDone: false\n            }\n        case 'DELETE_TODO':\n            return {\n\n            }\n        case 'TOGGLE_TODO':\n            if (state.id !== action.id) {\n                return state\n            }\n            return {\n                ...state,\n                isDone: !state.isDone\n            }\n        default:\n            return state\n    }\n}\n\nconst todos = (state = [\n    {id: uuidv4(), value: \"Начать Todo\", isDone: true},\n    {id: uuidv4(), value: \"Закончить Todo\", isDone: false},\n], action) => {\n    switch (action.type) {\n        case 'ADD_TODO':\n            return [\n                ...state,\n                todo(undefined, action)\n            ]\n        case 'DELETE_TODO':\n            return state.filter(t=>todo.id !== action.id)\n        case 'TOGGLE_TODO':\n            return state.map(t => todo(t, action))\n        default:\n            return state\n    }\n}\n\nconst visibilityFilter = (state = 'SHOW_ALL', action) => {\n    switch (action.type) {\n        case'SET_VISIBILITY_FILTER':\n            return action.filter;\n        default:\n            return state;\n    }\n}\n\nexport const todoApp = combineReducers({todos,visibilityFilter})\n\n\n\n"]},"metadata":{},"sourceType":"module"}