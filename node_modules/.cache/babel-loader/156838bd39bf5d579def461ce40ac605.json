{"ast":null,"code":"var _jsxFileName = \"/home/user/work/TodoListReact/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./components/todoList/Header\";\nimport TodoList from \"./components/todoList/TodoList\";\nimport { useEffect, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([//{ id: uuidv4(), value: \"Начать Todo\", isDone: true },\n    //  { id: uuidv4(), value: \"Закончить Todo\", isDone: false },\n  ]);\n\n  const fetchData = async () => {\n    const response = await fetch('http://localhost:8081/api/todos');\n    setTodos(await response.json());\n  };\n\n  function AddNewTodoAPI(inputValue) {\n    return fetch('http://localhost:8081/api/todos/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        value: inputValue\n      })\n    });\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const [filter, setFilter] = useState(\"all\");\n\n  const getTodosByFilter = () => {\n    if (filter === \"all\") {\n      return todos;\n    }\n\n    if (filter === \"active\") {\n      return todos.filter(elem => !elem.isDone);\n    }\n\n    if (filter === \"finish\") {\n      return todos.filter(elem => elem.isDone);\n    }\n  };\n  /*function FetchTodo(route,method,body){\n    return fetch(route,{\n      method:method,\n      header:{'Content-Type':'application/json'},\n      body: JSON.stringify(body),\n    })\n  }\n  */\n\n\n  const handleAddTodo = (inputValue, setInputValue) => {\n    if (inputValue) {\n      let obj = {\n        id: uuidv4(),\n        value: inputValue,\n        isDone: false\n      };\n      const newTodos = todos.concat(obj);\n      setTodos(newTodos);\n      setInputValue(\"\");\n    } else {\n      alert(\"Введите корректное значение\");\n    }\n  };\n\n  const listItemChange = id => {\n    setTodos(todos.map(elem => {\n      if (elem.id === id) {\n        elem.isDone = !elem.isDone;\n\n        function listItemChangeAPI() {\n          return fetch(`http://localhost:8081/api/todos/toggle/${elem.id}`, {\n            method: \"PUT\"\n          });\n        }\n\n        listItemChangeAPI();\n      }\n\n      return elem;\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App myApp\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      handleAddTodo: handleAddTodo,\n      listItemChange: listItemChange,\n      filter: filter,\n      setFilter: setFilter,\n      getTodosByFilter: getTodosByFilter(),\n      todos: todos,\n      setTodos: setTodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"yrficNvuTbOm45GIGp3sXWY0FBU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/user/work/TodoListReact/my-app/src/App.js"],"names":["Header","TodoList","useEffect","useState","v4","uuidv4","App","todos","setTodos","fetchData","response","fetch","json","AddNewTodoAPI","inputValue","method","headers","body","JSON","stringify","value","filter","setFilter","getTodosByFilter","elem","isDone","handleAddTodo","setInputValue","obj","id","newTodos","concat","alert","listItemChange","map","listItemChangeAPI"],"mappings":"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","sourcesContent":["import Header from \"./components/todoList/Header\";\nimport TodoList from \"./components/todoList/TodoList\";\nimport {useEffect, useState} from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nfunction App() {\n  const [todos, setTodos] = useState([\n    //{ id: uuidv4(), value: \"Начать Todo\", isDone: true },\n  //  { id: uuidv4(), value: \"Закончить Todo\", isDone: false },\n  ]);\n  const fetchData = async () => {\n    const response = await fetch('http://localhost:8081/api/todos');\n    setTodos(await response.json())\n  }\n  function AddNewTodoAPI(inputValue){\n    return fetch('http://localhost:8081/api/todos/',{\n      method:'POST',\n      headers:{'Content-Type':'application/json'},\n      body: JSON.stringify({value : inputValue})\n    })\n  }\n  useEffect(()=>{\n    fetchData()\n  },[])\n  const [filter, setFilter] = useState(\"all\");\n\n  const getTodosByFilter = () => {\n    if (filter === \"all\") {\n      return todos;\n    }\n\n    if (filter === \"active\") {\n      return todos.filter((elem) => !elem.isDone);\n    }\n\n    if (filter === \"finish\") {\n      return todos.filter((elem) => elem.isDone);\n    }\n  };\n\n  /*function FetchTodo(route,method,body){\n    return fetch(route,{\n      method:method,\n      header:{'Content-Type':'application/json'},\n      body: JSON.stringify(body),\n    })\n  }\n  */\n\n\n\n  const handleAddTodo = (inputValue, setInputValue) => {\n    if (inputValue) {\n      let obj = {\n        id: uuidv4(),\n        value: inputValue,\n        isDone: false,\n      };\n      const newTodos = todos.concat(obj);\n\n      setTodos(newTodos);\n      setInputValue(\"\");\n\n\n\n\n\n    } else {\n      alert(\"Введите корректное значение\");\n    }\n  };\n  const listItemChange = (id) => {\n    setTodos(\n      todos.map((elem) => {\n        if (elem.id === id) {\n          elem.isDone = !elem.isDone;\n\n          function listItemChangeAPI(){\n            return fetch(`http://localhost:8081/api/todos/toggle/${elem.id}`,{\n              method:\"PUT\"\n                }\n            )\n          }\n          listItemChangeAPI()\n        }\n        return elem;\n      })\n    );\n  };\n\n  return (\n    <div className=\"App myApp\">\n      <Header />\n      <TodoList\n        handleAddTodo={handleAddTodo}\n        listItemChange={listItemChange}\n        filter={filter}\n        setFilter={setFilter}\n        getTodosByFilter={getTodosByFilter()}\n        todos={todos}\n        setTodos={setTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}