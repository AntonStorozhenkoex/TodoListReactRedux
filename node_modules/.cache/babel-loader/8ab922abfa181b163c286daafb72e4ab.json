{"ast":null,"code":"var _jsxFileName = \"/home/user/work/TodoRedux/TodoListReact/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./components/todoList/Header\";\nimport TodoList from \"./components/todoList/TodoList\";\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App({\n  todos\n}) {\n  _s();\n\n  const [filter, setFilter] = useState(\"all\");\n\n  const getTodosByFilter = () => {\n    if (filter === \"all\") {\n      return todos;\n    }\n\n    if (filter === \"active\") {\n      return todos.filter(elem => !elem.isDone);\n    }\n\n    if (filter === \"finish\") {\n      return todos.filter(elem => elem.isDone);\n    }\n  };\n  /*  const handleAddTodo = (inputValue, setInputValue) => {\n      if (inputValue) {\n        let obj = {\n          id: uuidv4(),\n          value: inputValue,\n          isDone: false,\n        };\n        const newTodos = todos.concat(obj);\n        setTodos(newTodos);\n        setInputValue(\"\");\n      } else {\n        alert(\"Введите корректное значение\");\n      }\n    };*/\n\n  /* const listItemChange = (id) => {\n     setTodos(\n         todos.map((elem) => {\n           if (elem.id === id) {\n             elem.isDone = !elem.isDone;\n           }\n            return elem;\n         })\n     );\n   };*/\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App myApp\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      handleAddTodo: handleAddTodo,\n      listItemChange: listItemChange,\n      filter: filter,\n      setFilter: setFilter,\n      getTodosByFilter: getTodosByFilter(),\n      todos: todos,\n      setTodos: setTodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"boPJerHaELAyf+PNkR+Y8+JetQg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/user/work/TodoRedux/TodoListReact/src/App.js"],"names":["Header","TodoList","useState","v4","uuidv4","App","todos","filter","setFilter","getTodosByFilter","elem","isDone","handleAddTodo","listItemChange","setTodos"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,8BAAnB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;;AAGA,SAASC,GAAT,CAAa;AAACC,EAAAA;AAAD,CAAb,EAAsB;AAAA;;AACpB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMO,gBAAgB,GAAG,MAAM;AAC7B,QAAIF,MAAM,KAAK,KAAf,EAAsB;AACpB,aAAOD,KAAP;AACD;;AAED,QAAIC,MAAM,KAAK,QAAf,EAAyB;AACvB,aAAOD,KAAK,CAACC,MAAN,CAAcG,IAAD,IAAU,CAACA,IAAI,CAACC,MAA7B,CAAP;AACD;;AAED,QAAIJ,MAAM,KAAK,QAAf,EAAyB;AACvB,aAAOD,KAAK,CAACC,MAAN,CAAcG,IAAD,IAAUA,IAAI,CAACC,MAA5B,CAAP;AACD;AACF,GAZD;AAaF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGE,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AACI,MAAA,aAAa,EAAEC,aADnB;AAEI,MAAA,cAAc,EAAEC,cAFpB;AAGI,MAAA,MAAM,EAAEN,MAHZ;AAII,MAAA,SAAS,EAAEC,SAJf;AAKI,MAAA,gBAAgB,EAAEC,gBAAgB,EALtC;AAMI,MAAA,KAAK,EAAEH,KANX;AAOI,MAAA,QAAQ,EAAEQ;AAPd;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcD;;GAxDQT,G;;KAAAA,G;AA0DT,eAAeA,GAAf","sourcesContent":["import Header from \"./components/todoList/Header\";\nimport TodoList from \"./components/todoList/TodoList\";\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n\nfunction App({todos}) {\n  const [filter, setFilter] = useState(\"all\");\n\n  const getTodosByFilter = () => {\n    if (filter === \"all\") {\n      return todos;\n    }\n\n    if (filter === \"active\") {\n      return todos.filter((elem) => !elem.isDone);\n    }\n\n    if (filter === \"finish\") {\n      return todos.filter((elem) => elem.isDone);\n    }\n  };\n/*  const handleAddTodo = (inputValue, setInputValue) => {\n    if (inputValue) {\n      let obj = {\n        id: uuidv4(),\n        value: inputValue,\n        isDone: false,\n      };\n      const newTodos = todos.concat(obj);\n      setTodos(newTodos);\n      setInputValue(\"\");\n    } else {\n      alert(\"Введите корректное значение\");\n    }\n  };*/\n /* const listItemChange = (id) => {\n    setTodos(\n        todos.map((elem) => {\n          if (elem.id === id) {\n            elem.isDone = !elem.isDone;\n          }\n\n          return elem;\n        })\n    );\n  };*/\n\n  return (\n      <div className=\"App myApp\">\n        <Header />\n        <TodoList\n            handleAddTodo={handleAddTodo}\n            listItemChange={listItemChange}\n            filter={filter}\n            setFilter={setFilter}\n            getTodosByFilter={getTodosByFilter()}\n            todos={todos}\n            setTodos={setTodos}\n        />\n      </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}