{"ast":null,"code":"var _jsxFileName = \"/home/user/work/TodoListReact/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./components/todoList/Header\";\nimport TodoList from \"./components/todoList/TodoList\";\nimport { useEffect, useState } from \"react\";\nimport { link } from \"./localhost\";\nimport { createNewTodo, listItemToggle, deleteItem, deleteAllItems } from \"./services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const fetchData = async () => {\n    const response = await fetch(link);\n    setTodos(await response.json());\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const [todos, setTodos] = useState([]);\n\n  function deleteItemAPI(todo) {\n    return fetch(`${link}${todo.id}`, {\n      method: \"DELETE\"\n    }).then(fetchData);\n  }\n\n  const [filter, setFilter] = useState(\"all\");\n\n  const getTodosByFilter = () => {\n    if (filter === \"all\") {\n      return todos;\n    }\n\n    if (filter === \"active\") {\n      return todos.filter(elem => !elem.isDone);\n    }\n\n    if (filter === \"finish\") {\n      return todos.filter(elem => elem.isDone);\n    }\n  };\n\n  const handleAddTodo = (inputValue, setInputValue) => {\n    if (inputValue) {\n      createNewTodo(inputValue).then(fetchData);\n      setInputValue(\"\");\n    } else {\n      alert(\"Введите корректное значение\");\n    }\n  };\n\n  const listItemChange = id => {\n    setTodos(todos.map(elem => {\n      if (elem.id === id) {\n        elem.isDone = !elem.isDone;\n        listItemToggle(elem).then(fetchData);\n      }\n\n      return elem;\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App myApp\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      deleteAllItems: deleteAllItems,\n      deleteItem: deleteItem,\n      handleAddTodo: handleAddTodo,\n      listItemChange: listItemChange,\n      filter: filter,\n      setFilter: setFilter,\n      getTodosByFilter: getTodosByFilter(),\n      todos: todos,\n      setTodos: setTodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"l+DfVijUxY88jQ+Xb8akVq2FEWA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/user/work/TodoListReact/my-app/src/App.js"],"names":["Header","TodoList","useEffect","useState","link","createNewTodo","listItemToggle","deleteItem","deleteAllItems","App","fetchData","response","fetch","setTodos","json","todos","deleteItemAPI","todo","id","method","then","filter","setFilter","getTodosByFilter","elem","isDone","handleAddTodo","inputValue","setInputValue","alert","listItemChange","map"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,8BAAnB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAAQC,IAAR,QAAmB,aAAnB;AACA,SAAQC,aAAR,EAAsBC,cAAtB,EAAqCC,UAArC,EAAgDC,cAAhD,QAAqE,YAArE;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,SAAS,GAAG,YAAY;AAC5B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACR,IAAD,CAA5B;AACAS,IAAAA,QAAQ,CAAC,MAAMF,QAAQ,CAACG,IAAT,EAAP,CAAR;AACD,GAHD;;AAKAZ,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAM,CAACK,KAAD,EAAQF,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;;AAEA,WAASa,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,WAAOL,KAAK,CAAE,GAAER,IAAK,GAAEa,IAAI,CAACC,EAAG,EAAnB,EAAsB;AAChCC,MAAAA,MAAM,EAAE;AADwB,KAAtB,CAAL,CAEJC,IAFI,CAECV,SAFD,CAAP;AAGD;;AACD,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMoB,gBAAgB,GAAG,MAAM;AAC7B,QAAIF,MAAM,KAAK,KAAf,EAAsB;AACpB,aAAON,KAAP;AACD;;AAED,QAAIM,MAAM,KAAK,QAAf,EAAyB;AACvB,aAAON,KAAK,CAACM,MAAN,CAAcG,IAAD,IAAU,CAACA,IAAI,CAACC,MAA7B,CAAP;AACD;;AAED,QAAIJ,MAAM,KAAK,QAAf,EAAyB;AACvB,aAAON,KAAK,CAACM,MAAN,CAAcG,IAAD,IAAUA,IAAI,CAACC,MAA5B,CAAP;AACD;AACF,GAZD;;AAaA,QAAMC,aAAa,GAAG,CAACC,UAAD,EAAaC,aAAb,KAA+B;AACnD,QAAID,UAAJ,EAAgB;AACdtB,MAAAA,aAAa,CAACsB,UAAD,CAAb,CAA0BP,IAA1B,CAA+BV,SAA/B;AACAkB,MAAAA,aAAa,CAAC,EAAD,CAAb;AACD,KAHD,MAGO;AACLC,MAAAA,KAAK,CAAC,6BAAD,CAAL;AACD;AACF,GAPD;;AAQA,QAAMC,cAAc,GAAIZ,EAAD,IAAQ;AAC7BL,IAAAA,QAAQ,CACNE,KAAK,CAACgB,GAAN,CAAWP,IAAD,IAAU;AAClB,UAAIA,IAAI,CAACN,EAAL,KAAYA,EAAhB,EAAoB;AAClBM,QAAAA,IAAI,CAACC,MAAL,GAAc,CAACD,IAAI,CAACC,MAApB;AACAnB,QAAAA,cAAc,CAACkB,IAAD,CAAd,CAAqBJ,IAArB,CAA0BV,SAA1B;AACD;;AACD,aAAOc,IAAP;AACD,KAND,CADM,CAAR;AASD,GAVD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AACE,MAAA,cAAc,EAAEhB,cADlB;AAEE,MAAA,UAAU,EAAED,UAFd;AAGE,MAAA,aAAa,EAAEmB,aAHjB;AAIE,MAAA,cAAc,EAAEI,cAJlB;AAKE,MAAA,MAAM,EAAET,MALV;AAME,MAAA,SAAS,EAAEC,SANb;AAOE,MAAA,gBAAgB,EAAEC,gBAAgB,EAPpC;AAQE,MAAA,KAAK,EAAER,KART;AASE,MAAA,QAAQ,EAAEF;AATZ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GApEQJ,G;;KAAAA,G;AAsET,eAAeA,GAAf","sourcesContent":["import Header from \"./components/todoList/Header\";\nimport TodoList from \"./components/todoList/TodoList\";\nimport { useEffect, useState } from \"react\";\nimport {link} from \"./localhost\";\nimport {createNewTodo,listItemToggle,deleteItem,deleteAllItems} from \"./services\"\nfunction App() {\n  const fetchData = async () => {\n    const response = await fetch(link);\n    setTodos(await response.json());\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const [todos, setTodos] = useState([\n  ]);\n  function deleteItemAPI(todo) {\n    return fetch(`${link}${todo.id}`, {\n      method: \"DELETE\",\n    }).then(fetchData);\n  }\n  const [filter, setFilter] = useState(\"all\");\n\n  const getTodosByFilter = () => {\n    if (filter === \"all\") {\n      return todos;\n    }\n\n    if (filter === \"active\") {\n      return todos.filter((elem) => !elem.isDone);\n    }\n\n    if (filter === \"finish\") {\n      return todos.filter((elem) => elem.isDone);\n    }\n  };\n  const handleAddTodo = (inputValue, setInputValue) => {\n    if (inputValue) {\n      createNewTodo(inputValue).then(fetchData);\n      setInputValue(\"\");\n    } else {\n      alert(\"Введите корректное значение\");\n    }\n  };\n  const listItemChange = (id) => {\n    setTodos(\n      todos.map((elem) => {\n        if (elem.id === id) {\n          elem.isDone = !elem.isDone;\n          listItemToggle(elem).then(fetchData);\n        }\n        return elem;\n      })\n    );\n  };\n\n  return (\n    <div className=\"App myApp\">\n      <Header />\n      <TodoList\n        deleteAllItems={deleteAllItems}\n        deleteItem={deleteItem}\n        handleAddTodo={handleAddTodo}\n        listItemChange={listItemChange}\n        filter={filter}\n        setFilter={setFilter}\n        getTodosByFilter={getTodosByFilter()}\n        todos={todos}\n        setTodos={setTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}