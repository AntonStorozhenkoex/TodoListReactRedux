{"ast":null,"code":"var _jsxFileName = \"/home/user/work/TodoListReact/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./components/todoList/Header\";\nimport TodoList from \"./components/todoList/TodoList\";\nimport { useEffect, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([//{ id: uuidv4(), value: \"Начать Todo\", isDone: true },\n    //  { id: uuidv4(), value: \"Закончить Todo\", isDone: false },\n  ]);\n\n  const fetchData = async () => {\n    const response = await fetch('http://localhost:8081/api/todos');\n    setTodos(await response.json());\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const [filter, setFilter] = useState(\"all\");\n\n  const getTodosByFilter = () => {\n    if (filter === \"all\") {\n      return todos;\n    }\n\n    if (filter === \"active\") {\n      return todos.filter(elem => !elem.isDone);\n    }\n\n    if (filter === \"finish\") {\n      return todos.filter(elem => elem.isDone);\n    }\n  };\n  /*function FetchTodo(route,method,body){\n    return fetch(route,{\n      method:method,\n      header:{'Content-Type':'application/json'},\n      body: JSON.stringify(body),\n    })\n  }\n  */\n\n\n  const handleAddTodo = (inputValue, setInputValue) => {\n    if (inputValue) {\n      let obj = {\n        id: uuidv4(),\n        value: inputValue,\n        isDone: false\n      };\n      const newTodos = todos.concat(obj);\n\n      (() => {\n        return fetch('http://localhost:8081/api/todos/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            value: inputValue\n          })\n        });\n      })();\n\n      setTodos(newTodos);\n      setInputValue(\"\");\n    } else {\n      alert(\"Введите корректное значение\");\n    }\n  };\n\n  const listItemChange = id => {\n    setTodos(todos.map(elem => {\n      // TODO possible variant\n      // if (elem.id === id) {\n      //   return {\n      //     ...elem,\n      //     isDone: !elem.isDone\n      //   }\n      // }\n      //\n      // return elem\n      if (elem.id === id) {\n        elem.isDone = !elem.isDone;\n      }\n\n      return elem;\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App myApp\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      handleAddTodo: handleAddTodo,\n      listItemChange: listItemChange,\n      filter: filter,\n      setFilter: setFilter,\n      getTodosByFilter: getTodosByFilter(),\n      todos: todos,\n      setTodos: setTodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"yrficNvuTbOm45GIGp3sXWY0FBU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/user/work/TodoListReact/my-app/src/App.js"],"names":["Header","TodoList","useEffect","useState","v4","uuidv4","App","todos","setTodos","fetchData","response","fetch","json","filter","setFilter","getTodosByFilter","elem","isDone","handleAddTodo","inputValue","setInputValue","obj","id","value","newTodos","concat","method","headers","body","JSON","stringify","alert","listItemChange","map"],"mappings":"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","sourcesContent":["import Header from \"./components/todoList/Header\";\nimport TodoList from \"./components/todoList/TodoList\";\nimport {useEffect, useState} from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nfunction App() {\n  const [todos, setTodos] = useState([\n    //{ id: uuidv4(), value: \"Начать Todo\", isDone: true },\n  //  { id: uuidv4(), value: \"Закончить Todo\", isDone: false },\n  ]);\n  const fetchData = async () => {\n    const response = await fetch('http://localhost:8081/api/todos');\n    setTodos(await response.json())\n  }\n  useEffect(()=>{\n    fetchData()\n  },[])\n  const [filter, setFilter] = useState(\"all\");\n\n  const getTodosByFilter = () => {\n    if (filter === \"all\") {\n      return todos;\n    }\n\n    if (filter === \"active\") {\n      return todos.filter((elem) => !elem.isDone);\n    }\n\n    if (filter === \"finish\") {\n      return todos.filter((elem) => elem.isDone);\n    }\n  };\n\n  /*function FetchTodo(route,method,body){\n    return fetch(route,{\n      method:method,\n      header:{'Content-Type':'application/json'},\n      body: JSON.stringify(body),\n    })\n  }\n  */\n\n\n\n  const handleAddTodo = (inputValue, setInputValue) => {\n    if (inputValue) {\n      let obj = {\n        id: uuidv4(),\n        value: inputValue,\n        isDone: false,\n      };\n      const newTodos = todos.concat(obj);\n\n      (() => {\n        return fetch('http://localhost:8081/api/todos/',{\n          method:'POST',\n          headers:{'Content-Type':'application/json'},\n          body: JSON.stringify({value : inputValue})\n        })\n      })()\n\n\n\n      setTodos(newTodos);\n      setInputValue(\"\");\n\n\n\n\n\n    } else {\n      alert(\"Введите корректное значение\");\n    }\n  };\n  const listItemChange = (id) => {\n    setTodos(\n      todos.map((elem) => {\n        // TODO possible variant\n        // if (elem.id === id) {\n        //   return {\n        //     ...elem,\n        //     isDone: !elem.isDone\n        //   }\n        // }\n        //\n        // return elem\n        if (elem.id === id) {\n          elem.isDone = !elem.isDone;\n        }\n\n        return elem;\n      })\n    );\n  };\n\n  return (\n    <div className=\"App myApp\">\n      <Header />\n      <TodoList\n        handleAddTodo={handleAddTodo}\n        listItemChange={listItemChange}\n        filter={filter}\n        setFilter={setFilter}\n        getTodosByFilter={getTodosByFilter()}\n        todos={todos}\n        setTodos={setTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}